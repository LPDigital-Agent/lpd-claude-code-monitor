[tox]
envlist = py38,py39,py310,py311,py312,lint,type-check,security
isolated_build = true
skip_missing_interpreters = true

[testenv]
description = Run tests with pytest
deps = 
    -r{toxinidir}/requirements-test.txt
    -r{toxinidir}/requirements.txt
commands = 
    pytest {posargs}
setenv =
    PYTHONPATH = {toxinidir}/src
    COVERAGE_FILE = {toxworkdir}/.coverage.{envname}

[testenv:lint]
description = Run linting with flake8 and black
deps = 
    flake8
    black
    isort
    flake8-docstrings
    flake8-import-order
commands = 
    black --check --diff src tests
    isort --check-only --diff src tests
    flake8 src tests

[testenv:format]
description = Format code with black and isort
deps = 
    black
    isort
commands = 
    black src tests
    isort src tests

[testenv:type-check]
description = Run type checking with mypy
deps = 
    -r{toxinidir}/requirements.txt
    mypy
    types-PyYAML
    types-requests
commands = 
    mypy src/dlq_monitor

[testenv:security]
description = Run security checks with bandit
deps = 
    bandit[toml]
commands = 
    bandit -r src -f json -o {toxworkdir}/bandit-report.json
    bandit -r src

[testenv:docs]
description = Build documentation
deps = 
    -r{toxinidir}/requirements.txt
    sphinx
    sphinx-rtd-theme
commands = 
    sphinx-build -b html docs docs/_build/html

[testenv:clean]
description = Clean up build artifacts
deps = 
commands = 
    python -c "import shutil; shutil.rmtree('build', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('dist', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.tox', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('htmlcov', ignore_errors=True)"
    python -c "import shutil; shutil.rmtree('.coverage*', ignore_errors=True)"

[flake8]
max-line-length = 88
extend-ignore = E203, W503
exclude = 
    .git,
    __pycache__,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    venv

[isort]
profile = black
multi_line_output = 3
line_length = 88
known_first_party = dlq_monitor